<controls:MetroWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:local="clr-namespace:MahAppsMetroWindowButtonCommands"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      mc:Ignorable="d" ResizeMode="CanResizeWithGrip"
                      Title="MainWindow" Height="350" Width="525"
                      BorderThickness="1"
                      GlowBrush="{DynamicResource AccentBaseColorBrush}"
                      WindowStartupLocation="CenterScreen">

<controls:MetroWindow.Resources>
    <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
            <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
        </ResourceDictionary.MergedDictionaries>

        <Style x:Key="CustomLightMinButtonStyle"
               BasedOn="{StaticResource LightMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGreen" />
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Green" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CustomDarkMinButtonStylee"
               BasedOn="{StaticResource DarkMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
            <Setter Property="Background" Value="{StaticResource AccentColorBrush}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGreen" />
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Green" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CustomLightMaxButtonStyle"
               BasedOn="{StaticResource LightMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGoldenrod" />
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CustomDarkMaxButtonStylee"
               BasedOn="{StaticResource DarkMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkGoldenrod" />
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="CustomLightCloseButtonStyle"
               BasedOn="{StaticResource LightMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkRed" />
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="CustomDarkCloseButtonStylee"
               BasedOn="{StaticResource DarkMetroWindowButtonStyle}"
               TargetType="{x:Type Button}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkRed" />
                    <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </ResourceDictionary>
</controls:MetroWindow.Resources>

    <controls:MetroWindow.WindowButtonCommands>
        <controls:WindowButtonCommands Minimize="A custom Tooltip which will be shown on Min button"
                                       Maximize="Maximize the window"
                                       Restore="Restore the window"
                                       Close="Noooo... don't close me!"
                                       LightMinButtonStyle="{StaticResource CustomLightMinButtonStyle}"
                                       LightMaxButtonStyle="{StaticResource CustomLightMaxButtonStyle}"
                                       LightCloseButtonStyle="{StaticResource CustomLightCloseButtonStyle}"
                                       DarkMinButtonStyle="{StaticResource CustomDarkMinButtonStylee}"
                                       DarkMaxButtonStyle="{StaticResource CustomDarkMaxButtonStylee}"
                                       DarkCloseButtonStyle="{StaticResource CustomDarkCloseButtonStylee}" />
    </controls:MetroWindow.WindowButtonCommands>

</controls:MetroWindow>